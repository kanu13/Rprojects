sd(price.res$price,na.rm = TRUE)
mean(price.res$price,na.rm = TRUE)-sd(price.res$price,na.rm = TRUE)
arrange(price.res$price)
price.res%>%arrange(price)
price.res<-read.csv("https://s3.amazonaws.com/aws-website-programminginrforanalytics-tbal0/data/sales_county.csv", header = TRUE)
price.res
desc.res
land.use
sewersheds
price.res.test<-price.res%>%filter(price>1)%>%arrange(price)
colnames(price.res)<-c("parid","saledate","saledesc","price")
colnames(desc.res)<-c("parid","property.city","muni.desc","school.desc","owner.desc","use.desc","lot.area","homestead.flag","year.built","condition","bedrooms","fullbaths","halfbaths","finished.living.area","zip","geoid10","hood","census.block.group","neighborhood")
colnames(land.use)<-c("parid","land.use","sqft")
colnames(sewersheds)<-c("parid","sewer.shed","cso.per.inflow")
price.res.test<-price.res%>%filter(price>1)%>%arrange(price)
price.res.test
price.res.test<-price.res%>%filter(price>100)%>%arrange(price)
price.res.test
price.res.test<-price.res%>%filter(price>1000)%>%arrange(price)
price.res.test
price.res.test<-price.res%>%filter(price>10000)%>%arrange(price)
price.res.test
price.res.test<-price.res%>%filter(price>15000)%>%arrange(price)
price.res.test
knitr::opts_chunk$set(echo = TRUE)
require(ggplot2)
require(tidyverse)
require(forcats)
require(polycor)
require(corrplot)
require(knitr)
require(tidyverse)
require(MASS)
require(ISLR)
require(dplyr)
require(anova)
price.res.new<-price.res%>%
dplyr::filter(saledesc ==c("VALID SALE"))%>%
dplyr::select(parid,price)
price.res.new<-price.res.new[!duplicated(price.res.new$parid),]
price.res.new
price.res.new
price.res.new<-price.res%>%
dplyr::filter(saledesc ==c("VALID SALE"))%>%
dplyr::select(parid,price)
price.res.new
knitr::opts_chunk$set(echo = TRUE)
require(ggplot2)
require(tidyverse)
require(forcats)
require(polycor)
require(corrplot)
require(knitr)
require(tidyverse)
require(MASS)
require(ISLR)
require(dplyr)
require(anova)
price.res<-read.csv("https://s3.amazonaws.com/aws-website-programminginrforanalytics-tbal0/data/sales_county.csv", header = TRUE)
desc.res<-read.csv("https://s3.amazonaws.com/aws-website-programminginrforanalytics-tbal0/data/assessments_city.csv", header = TRUE)
land.use<-read.csv("https://s3.amazonaws.com/aws-website-programminginrforanalytics-tbal0/data/land_use_city.csv", header = TRUE)
sewersheds<-read.csv("https://s3.amazonaws.com/aws-website-programminginrforanalytics-tbal0/data/sewersheds.csv", header = TRUE)
price.res
desc.res
land.use
sewersheds
colnames(price.res)<-c("parid","saledate","saledesc","price")
colnames(desc.res)<-c("parid","property.city","muni.desc","school.desc","owner.desc","use.desc","lot.area","homestead.flag","year.built","condition","bedrooms","fullbaths","halfbaths","finished.living.area","zip","geoid10","hood","census.block.group","neighborhood")
colnames(land.use)<-c("parid","land.use","sqft")
colnames(sewersheds)<-c("parid","sewer.shed","cso.per.inflow")
price.res.new<-price.res%>%
dplyr::filter(saledesc ==c("VALID SALE"))%>%
dplyr::select(parid,price)
price.res.new
price.res.new<-price.res%>%
dplyr::filter(saledesc ==c("VALID SALE","OTHER VALID"))%>%
dplyr::select(parid,price)
price.res.new
price.res.new<-price.res%>%
dplyr::filter(saledesc =="VALID SALE"|"OTHER VALID")%>%
dplyr::select(parid,price)
price.res.new<-price.res%>%
dplyr::filter(saledesc ="VALID SALE"|"OTHER VALID")%>%
dplyr::select(parid,price)
price.res.new<-price.res%>%
dplyr::filter(saledesc == VALID SALE |OTHER VALID)%>%
price.res.new<-price.res%>%
dplyr::filter(saledesc == "VALID SALE" |saledesc=="OTHER VALID")%>%
dplyr::select(parid,price)
price.res.new
price.res.new<-price.res%>%
dplyr::filter(saledesc == "VALID SALE" |saledesc=="OTHER VALID"|saledesc=="OTHER")%>%
dplyr::select(parid,price)
price.res.new
price.res.new<-price.res%>%
dplyr::filter(saledesc == "VALID SALE" |saledesc=="OTHER VALID"|saledesc=="OTHER")%>%
dplyr::select(parid,price)
price.res.new<-price.res.new[!duplicated(price.res.new$parid),]
price.res.new
uniq<- intersect(price.res.new$parid,land.use$parid)
length(uniq)
desc.res.new<-desc.res%>%filter(property.city=="PITTSBURGH")%>%dplyr::select(-property.city,-school.desc,-homestead.flag,-geoid10,-neighborhood,census.block.group,-muni.desc,-zip)
desc.res.new<-desc.res.new[!duplicated(desc.res.new$parid),]
land.use.new<-land.use%>%spread(key = "land.use",value = "sqft",drop=TRUE)
colnames(land.use.new)<-c("parid","bldgs.sqft","impervious.sqft","open.space.sqft","trees.sqft")
land.use.new
sewersheds.new<-sewersheds[!duplicated(sewersheds$parid),]
price.res.new
desc.res.new
land.use.new
sewersheds.new
city.combined.data<-left_join(desc.res.new,price.res.new,by="parid")
city.combined.data<-left_join(city.combined.data,land.use.new,by="parid")
city.combined.data<-left_join(city.combined.data,sewersheds.new,by="parid")
city.combined.data$parid<-as.factor(city.combined.data$parid)
city.combined.data<-city.combined.data[!is.na(city.combined.data$price),]
city.combined.data$bldgs.sqft[is.na(city.combined.data$bldgs.sqft)]<-0
city.combined.data$impervious.sqft[is.na(city.combined.data$impervious.sqft)]<-0
city.combined.data$open.space.sqft[is.na(city.combined.data$open.space.sqft)]<-0
city.combined.data$trees.sqft[is.na(city.combined.data$trees.sqft)]<-0
city.combined.data$bedrooms[is.na(city.combined.data$bedrooms)]<-0
city.combined.data$fullbaths[is.na(city.combined.data$fullbaths)]<-0
city.combined.data$halfbaths[is.na(city.combined.data$halfbaths)]<-0
city.combined.data<-city.combined.data%>%dplyr::mutate(bathrooms=fullbaths+0.5*halfbaths,trees.count=trees.sqft/3.14*(25/4)*(25/4))%>%dplyr::select(-fullbaths,-halfbaths)
city.combined.data<-city.combined.data%>%droplevels()
city.combined.data
# Function taken from ?pairs.
panel.cor <- function(x, y, digits = 2, prefix = "", cex.cor, ...)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
require(polycor)
r <- abs(cor(x, y))
txt <- format(c(r, 0.123456789), digits = digits)[1]
txt <- paste0(prefix, txt)
if(missing(cex.cor)) cex.cor <- 0.8/strwidth(txt)
text(0.5, 0.5, txt, cex = pmax(1, cex.cor * r))
}
city.combined.new<-dplyr::select(city.combined.data,-parid,-census.block.group,-sewer.shed,-cso.per.inflow) # making a new data set comprising of variables that I think may have an impact on prices
pairs(city.combined.new, lower.panel = panel.cor)
corrplot.data<-hetcor(city.combined.new)
corrplot(corrplot.data$correlations)
price.model<-lm(price~use.desc+owner.desc+condition+finished.living.area+open.space.sqft+trees.count+impervious.sqft,data= city.combined.data)
summary(price.model)
plot(price.model, which = 1:2)
price.model<-lm(price~owner.desc+condition+finished.living.area+open.space.sqft+trees.count+impervious.sqft,data= city.combined.data)
summary(price.model)
plot(price.model, which = 1:2)
price.model.log<-lm(log(price)~owner.desc+condition+finished.living.area+open.space.sqft+trees.count+impervious.sqft,data= city.combined.data)
city.combined.new<-dplyr::select(city.combined.data,-parid,-census.block.group,-sewer.shed,-cso.per.inflow) # making a new data set comprising of variables that I think may have an impact on prices
pairs(city.combined.new, lower.panel = panel.cor)
city.combined.data<-left_join(desc.res.new,price.res.new,by="parid")
city.combined.data<-left_join(city.combined.data,land.use.new,by="parid")
city.combined.data<-left_join(city.combined.data,sewersheds.new,by="parid")
city.combined.data$parid<-as.factor(city.combined.data$parid)
city.combined.data<-city.combined.data[!is.na(city.combined.data$price),]
city.combined.data$bldgs.sqft[is.na(city.combined.data$bldgs.sqft)]<-0
city.combined.data$impervious.sqft[is.na(city.combined.data$impervious.sqft)]<-0
city.combined.data$open.space.sqft[is.na(city.combined.data$open.space.sqft)]<-0
city.combined.data$trees.sqft[is.na(city.combined.data$trees.sqft)]<-0
city.combined.data$bedrooms[is.na(city.combined.data$bedrooms)]<-0
city.combined.data$fullbaths[is.na(city.combined.data$fullbaths)]<-0
city.combined.data$halfbaths[is.na(city.combined.data$halfbaths)]<-0
city.combined.data<-city.combined.data%>%dplyr::mutate(bathrooms=fullbaths+0.5*halfbaths,trees.count=trees.sqft/3.14*(25/4)*(25/4))%>%dplyr::select(-fullbaths,-halfbaths)
city.combined.data<-city.combined.data%>%droplevels()
city.combined.data
price.model.log<-lm(log(price)~owner.desc+condition+finished.living.area+open.space.sqft+trees.count+impervious.sqft,data= city.combined.data)
price.model.log<-lm(log(price)~owner.desc+condition+finished.living.area+open.space.sqft+trees.count+impervious.sqft,data= city.combined.data)
range(city.combined.data$price)
sum(which(city.combined.data$price==0))
city.combined.data<-city.combined.data[city.combined.data$price==0]<-mean(city.combined.data$price)
city.combined.data$price<-city.combined.data$price[city.combined.data$price==0]<-mean(city.combined.data$price)
sum(which(city.combined.data$price==0))
city.combined.data<-left_join(desc.res.new,price.res.new,by="parid")
city.combined.data<-left_join(city.combined.data,land.use.new,by="parid")
city.combined.data<-left_join(city.combined.data,sewersheds.new,by="parid")
city.combined.data$parid<-as.factor(city.combined.data$parid)
city.combined.data<-city.combined.data[!is.na(city.combined.data$price),]
city.combined.data$price<-city.combined.data$price[city.combined.data$price==0]<-mean(city.combined.data$price)
city.combined.data$bldgs.sqft[is.na(city.combined.data$bldgs.sqft)]<-0
city.combined.data$impervious.sqft[is.na(city.combined.data$impervious.sqft)]<-0
city.combined.data$open.space.sqft[is.na(city.combined.data$open.space.sqft)]<-0
city.combined.data$trees.sqft[is.na(city.combined.data$trees.sqft)]<-0
city.combined.data$bedrooms[is.na(city.combined.data$bedrooms)]<-0
city.combined.data$fullbaths[is.na(city.combined.data$fullbaths)]<-0
city.combined.data$halfbaths[is.na(city.combined.data$halfbaths)]<-0
city.combined.data<-city.combined.data%>%dplyr::mutate(bathrooms=fullbaths+0.5*halfbaths,trees.count=trees.sqft/3.14*(25/4)*(25/4))%>%dplyr::select(-fullbaths,-halfbaths)
city.combined.data<-city.combined.data%>%droplevels()
city.combined.data
# Function taken from ?pairs.
panel.cor <- function(x, y, digits = 2, prefix = "", cex.cor, ...)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
require(polycor)
r <- abs(cor(x, y))
txt <- format(c(r, 0.123456789), digits = digits)[1]
txt <- paste0(prefix, txt)
if(missing(cex.cor)) cex.cor <- 0.8/strwidth(txt)
text(0.5, 0.5, txt, cex = pmax(1, cex.cor * r))
}
city.combined.new<-dplyr::select(city.combined.data,-parid,-census.block.group,-sewer.shed,-cso.per.inflow) # making a new data set comprising of variables that I think may have an impact on prices
pairs(city.combined.new, lower.panel = panel.cor)
range(city.combined.data$price)
city.combined.data<-left_join(desc.res.new,price.res.new,by="parid")
city.combined.data<-left_join(city.combined.data,land.use.new,by="parid")
city.combined.data<-left_join(city.combined.data,sewersheds.new,by="parid")
city.combined.data$parid<-as.factor(city.combined.data$parid)
city.combined.data<-city.combined.data[!is.na(city.combined.data$price),]
city.combined.data$price<-city.combined.data$price[city.combined.data$price==0]<-100,000
city.combined.data<-left_join(desc.res.new,price.res.new,by="parid")
city.combined.data<-left_join(city.combined.data,land.use.new,by="parid")
city.combined.data<-left_join(city.combined.data,sewersheds.new,by="parid")
city.combined.data$parid<-as.factor(city.combined.data$parid)
city.combined.data<-city.combined.data[!is.na(city.combined.data$price),]
city.combined.data$price<-city.combined.data$price[city.combined.data$price==0]<-100000
city.combined.data$bldgs.sqft[is.na(city.combined.data$bldgs.sqft)]<-0
city.combined.data$impervious.sqft[is.na(city.combined.data$impervious.sqft)]<-0
city.combined.data$open.space.sqft[is.na(city.combined.data$open.space.sqft)]<-0
city.combined.data$trees.sqft[is.na(city.combined.data$trees.sqft)]<-0
city.combined.data$bedrooms[is.na(city.combined.data$bedrooms)]<-0
city.combined.data$fullbaths[is.na(city.combined.data$fullbaths)]<-0
city.combined.data$halfbaths[is.na(city.combined.data$halfbaths)]<-0
city.combined.data<-city.combined.data%>%dplyr::mutate(bathrooms=fullbaths+0.5*halfbaths,trees.count=trees.sqft/3.14*(25/4)*(25/4))%>%dplyr::select(-fullbaths,-halfbaths)
city.combined.data<-city.combined.data%>%droplevels()
range(city.combined.data$price)
city.combined.data$price<-city.combined.data$price[which(city.combined.data$price==0)]<-100000
city.combined.data<-left_join(desc.res.new,price.res.new,by="parid")
city.combined.data<-left_join(city.combined.data,land.use.new,by="parid")
city.combined.data<-left_join(city.combined.data,sewersheds.new,by="parid")
city.combined.data$parid<-as.factor(city.combined.data$parid)
city.combined.data<-city.combined.data[!is.na(city.combined.data$price),]
city.combined.data$price<-city.combined.data$price[which(city.combined.data$price==0)]<-100000
city.combined.data$bldgs.sqft[is.na(city.combined.data$bldgs.sqft)]<-0
city.combined.data$impervious.sqft[is.na(city.combined.data$impervious.sqft)]<-0
city.combined.data$open.space.sqft[is.na(city.combined.data$open.space.sqft)]<-0
city.combined.data$trees.sqft[is.na(city.combined.data$trees.sqft)]<-0
city.combined.data$bedrooms[is.na(city.combined.data$bedrooms)]<-0
city.combined.data$fullbaths[is.na(city.combined.data$fullbaths)]<-0
city.combined.data$halfbaths[is.na(city.combined.data$halfbaths)]<-0
city.combined.data<-city.combined.data%>%dplyr::mutate(bathrooms=fullbaths+0.5*halfbaths,trees.count=trees.sqft/3.14*(25/4)*(25/4))%>%dplyr::select(-fullbaths,-halfbaths)
city.combined.data<-city.combined.data%>%droplevels()
range(city.combined.data$price)
range(city.combined.data$price)
range(price.res.new$price)
sum(which(price.res.new$price==0))
which(price.res.new$price==0)
sum(price.res.new$price==0)
city.combined.data<-city.combined.data[!any(city.combined.data==0),]
range(city.combined.data$price)
city.combined.data<-city.combined.data[!city.combined.data$price==0,]
range(city.combined.data$price)
city.combined.data<-left_join(desc.res.new,price.res.new,by="parid")
city.combined.data<-left_join(city.combined.data,land.use.new,by="parid")
city.combined.data<-left_join(city.combined.data,sewersheds.new,by="parid")
city.combined.data$parid<-as.factor(city.combined.data$parid)
city.combined.data<-city.combined.data[!is.na(city.combined.data$price),]
city.combined.data$bldgs.sqft[is.na(city.combined.data$bldgs.sqft)]<-0
city.combined.data$impervious.sqft[is.na(city.combined.data$impervious.sqft)]<-0
city.combined.data$open.space.sqft[is.na(city.combined.data$open.space.sqft)]<-0
city.combined.data$trees.sqft[is.na(city.combined.data$trees.sqft)]<-0
city.combined.data$bedrooms[is.na(city.combined.data$bedrooms)]<-0
city.combined.data$fullbaths[is.na(city.combined.data$fullbaths)]<-0
city.combined.data$halfbaths[is.na(city.combined.data$halfbaths)]<-0
city.combined.data<-city.combined.data%>%dplyr::mutate(bathrooms=fullbaths+0.5*halfbaths,trees.count=trees.sqft/3.14*(25/4)*(25/4))%>%dplyr::select(-fullbaths,-halfbaths)
city.combined.data<-city.combined.data%>%droplevels()
range(city.combined.data$price)
city.combined.data<-city.combined.data[!which(city.combined.data$price==0),]
range(city.combined.data$price)
city.combined.data
city.combined.data<-city.combined.data[which(city.combined.data$price==0),]
city.combined.data
city.combined.data<-left_join(desc.res.new,price.res.new,by="parid")
city.combined.data<-left_join(city.combined.data,land.use.new,by="parid")
city.combined.data<-left_join(city.combined.data,sewersheds.new,by="parid")
city.combined.data$parid<-as.factor(city.combined.data$parid)
city.combined.data<-city.combined.data[!is.na(city.combined.data$price),]
city.combined.data[which(city.combined.data$price==0),]
city.combined.data<-left_join(desc.res.new,price.res.new,by="parid")
city.combined.data<-left_join(city.combined.data,land.use.new,by="parid")
city.combined.data<-left_join(city.combined.data,sewersheds.new,by="parid")
city.combined.data$parid<-as.factor(city.combined.data$parid)
city.combined.data<-city.combined.data[!is.na(city.combined.data$price),]
city.combined.data[which(city.combined.data$price==0),]
city.combined.data$bldgs.sqft[is.na(city.combined.data$bldgs.sqft)]<-0
city.combined.data$impervious.sqft[is.na(city.combined.data$impervious.sqft)]<-0
city.combined.data$open.space.sqft[is.na(city.combined.data$open.space.sqft)]<-0
city.combined.data$trees.sqft[is.na(city.combined.data$trees.sqft)]<-0
city.combined.data$bedrooms[is.na(city.combined.data$bedrooms)]<-0
city.combined.data$fullbaths[is.na(city.combined.data$fullbaths)]<-0
city.combined.data$halfbaths[is.na(city.combined.data$halfbaths)]<-0
city.combined.data<-city.combined.data%>%dplyr::mutate(bathrooms=fullbaths+0.5*halfbaths,trees.count=trees.sqft/3.14*(25/4)*(25/4))%>%dplyr::select(-fullbaths,-halfbaths)
city.combined.data<-city.combined.data%>%droplevels()
city.combined.data
range(city.combined.data$price)
city.combined.data[which(city.combined.data$price==0),]
city.combined.data<-city.combined.data[which(city.combined.data$price==0),]
city.combined.data
city.combined.data<-left_join(desc.res.new,price.res.new,by="parid")
city.combined.data<-left_join(city.combined.data,land.use.new,by="parid")
city.combined.data<-left_join(city.combined.data,sewersheds.new,by="parid")
city.combined.data$parid<-as.factor(city.combined.data$parid)
city.combined.data<-city.combined.data[!is.na(city.combined.data$price),]
city.combined.data<-city.combined.data[!which(city.combined.data$price==0),]
city.combined.data
city.combined.data<-!city.combined.data[which(city.combined.data$price==0),]
city.combined.data<-city.combined.data[any(city.combined.data$price==0),]
city.combined.data
ity.combined.data<-left_join(desc.res.new,price.res.new,by="parid")
city.combined.data<-left_join(city.combined.data,land.use.new,by="parid")
city.combined.data<-left_join(city.combined.data,sewersheds.new,by="parid")
city.combined.data$parid<-as.factor(city.combined.data$parid)
city.combined.data<-city.combined.data[!is.na(city.combined.data$price),]
city.combined.data<-city.combined.data[any(city.combined.data$price==0),]
city.combined.data
any(city.combined.data$price==0)
range(city.combined.data$price)
city.combined.data<-left_join(desc.res.new,price.res.new,by="parid")
city.combined.data<-left_join(city.combined.data,land.use.new,by="parid")
city.combined.data<-left_join(city.combined.data,sewersheds.new,by="parid")
city.combined.data$parid<-as.factor(city.combined.data$parid)
city.combined.data<-city.combined.data[!is.na(city.combined.data$price),]
any(city.combined.data$price==0)
city.combined.data$bldgs.sqft[is.na(city.combined.data$bldgs.sqft)]<-0
city.combined.data$impervious.sqft[is.na(city.combined.data$impervious.sqft)]<-0
city.combined.data$open.space.sqft[is.na(city.combined.data$open.space.sqft)]<-0
city.combined.data$trees.sqft[is.na(city.combined.data$trees.sqft)]<-0
city.combined.data$bedrooms[is.na(city.combined.data$bedrooms)]<-0
city.combined.data$fullbaths[is.na(city.combined.data$fullbaths)]<-0
city.combined.data$halfbaths[is.na(city.combined.data$halfbaths)]<-0
city.combined.data<-city.combined.data%>%dplyr::mutate(bathrooms=fullbaths+0.5*halfbaths,trees.count=trees.sqft/3.14*(25/4)*(25/4))%>%dplyr::select(-fullbaths,-halfbaths)
city.combined.data<-city.combined.data%>%droplevels()
city.combined.data
range(city.combined.data$price)
city.combined.data<-left_join(desc.res.new,price.res.new,by="parid")
city.combined.data<-left_join(city.combined.data,land.use.new,by="parid")
city.combined.data<-left_join(city.combined.data,sewersheds.new,by="parid")
city.combined.data$parid<-as.factor(city.combined.data$parid)
city.combined.data<-city.combined.data[!is.na(city.combined.data$price),]
any(city.combined.data$price==0)
sum(any(city.combined.data$price==0))
city.combined.data[any(city.combined.data$price==0),]
city.combined.data[any(city.combined.data$price==0),]
city.combined.data[which(city.combined.data$price==0),]
city.combined.data<-filter(city.combined.data,price==0)
range(city.combined.data$price)
city.combined.data<-left_join(desc.res.new,price.res.new,by="parid")
city.combined.data<-left_join(city.combined.data,land.use.new,by="parid")
city.combined.data<-left_join(city.combined.data,sewersheds.new,by="parid")
city.combined.data$parid<-as.factor(city.combined.data$parid)
city.combined.data<-city.combined.data[!is.na(city.combined.data$price),]
city.combined.data<-city.combined.data%>%filter(price==0)
city.combined.data
price.res.new
price.res.new<-price.res%>%
dplyr::filter(saledesc == "VALID SALE" |saledesc=="OTHER VALID"|saledesc=="OTHER")%>%
price.res.new<-price.res.new[!duplicated(price.res.new$parid),]
price.res.new<-price.res%>%
dplyr::filter(saledesc == "VALID SALE" |saledesc=="OTHER VALID"|saledesc=="OTHER")
price.res.new<-price.res.new[!duplicated(price.res.new$parid),]
sum(price.res.new$price==0)
price.res.new
city.combined.data<-left_join(desc.res.new,price.res.new,by="parid")
city.combined.data<-left_join(city.combined.data,land.use.new,by="parid")
city.combined.data<-left_join(city.combined.data,sewersheds.new,by="parid")
city.combined.data$parid<-as.factor(city.combined.data$parid)
city.combined.data<-city.combined.data[!is.na(city.combined.data$price),]
city.combined.data<-city.combined.data%>%dplyr::filter(price==0)
city.combined.data
city.combined.data<-left_join(desc.res.new,price.res.new,by="parid")
city.combined.data<-left_join(city.combined.data,land.use.new,by="parid")
city.combined.data<-left_join(city.combined.data,sewersheds.new,by="parid")
city.combined.data$parid<-as.factor(city.combined.data$parid)
city.combined.data<-city.combined.data[!is.na(city.combined.data$price),]
city.combined.data<-city.combined.data%>%dplyr::filter(price!=0)
city.combined.data
range(city.combined.data$price)
city.combined.data<-left_join(desc.res.new,price.res.new,by="parid")
city.combined.data<-left_join(city.combined.data,land.use.new,by="parid")
city.combined.data<-left_join(city.combined.data,sewersheds.new,by="parid")
city.combined.data$parid<-as.factor(city.combined.data$parid)
city.combined.data<-city.combined.data[!is.na(city.combined.data$price),]
city.combined.data<-city.combined.data%>%dplyr::filter(price!=0)
city.combined.data$bldgs.sqft[is.na(city.combined.data$bldgs.sqft)]<-0
city.combined.data$impervious.sqft[is.na(city.combined.data$impervious.sqft)]<-0
city.combined.data$open.space.sqft[is.na(city.combined.data$open.space.sqft)]<-0
city.combined.data$trees.sqft[is.na(city.combined.data$trees.sqft)]<-0
city.combined.data$bedrooms[is.na(city.combined.data$bedrooms)]<-0
city.combined.data$fullbaths[is.na(city.combined.data$fullbaths)]<-0
city.combined.data$halfbaths[is.na(city.combined.data$halfbaths)]<-0
city.combined.data<-city.combined.data%>%dplyr::mutate(bathrooms=fullbaths+0.5*halfbaths,trees.count=trees.sqft/3.14*(25/4)*(25/4))%>%dplyr::select(-fullbaths,-halfbaths)
city.combined.data<-city.combined.data%>%droplevels()
city.combined.data
# Function taken from ?pairs.
panel.cor <- function(x, y, digits = 2, prefix = "", cex.cor, ...)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
require(polycor)
r <- abs(cor(x, y))
txt <- format(c(r, 0.123456789), digits = digits)[1]
txt <- paste0(prefix, txt)
if(missing(cex.cor)) cex.cor <- 0.8/strwidth(txt)
text(0.5, 0.5, txt, cex = pmax(1, cex.cor * r))
}
city.combined.new<-dplyr::select(city.combined.data,-parid,-census.block.group,-sewer.shed,-cso.per.inflow) # making a new data set comprising of variables that I think may have an impact on prices
pairs(city.combined.new, lower.panel = panel.cor)
corrplot.data<-hetcor(city.combined.new)
corrplot.data<-hetcor(city.combined.new)
price.model<-lm(price~owner.desc+condition+finished.living.area+open.space.sqft+trees.count+impervious.sqft,data= city.combined.data)
summary(price.model)
plot(price.model, which = 1:2)
price.model.log<-lm(log(price)~owner.desc+condition+finished.living.area+open.space.sqft+trees.count+impervious.sqft,data= city.combined.data)
summary(price.model.log)
plot(price.model.log, which = 1:2)
price.model.log<-lm(log(price)~owner.desc+condition+finished.living.area+log(open.space.sqft)+trees.count+impervious.sqft,data= city.combined.data)
price.model.log<-lm(log(price)~owner.desc+condition+finished.living.area+open.space.sqft+trees.count+impervious.sqft,data= city.combined.data)
summary(price.model.log)
plot(price.model.log, which = 1:2)
city.combined.new<-dplyr::select(city.combined.data,-parid,-census.block.group,-sewer.shed,-cso.per.inflow) # making a new data set comprising of variables that I think may have an impact on prices
pairs(city.combined.new, lower.panel = panel.cor)
corrplot.data<-hetcor(city.combined.new)
corrplot.data<-hetcor(city.combined.new)
corrplot.price<-hetcor(city.combined.new)
city.combined.data<-left_join(desc.res.new,price.res.new,by="parid")
city.combined.data<-left_join(city.combined.data,land.use.new,by="parid")
city.combined.data<-left_join(city.combined.data,sewersheds.new,by="parid")
city.combined.data$parid<-as.factor(city.combined.data$parid)
city.combined.data<-city.combined.data[!is.na(city.combined.data$price),]
city.combined.data<-city.combined.data%>%dplyr::filter(price!=0)
city.combined.data$bldgs.sqft[is.na(city.combined.data$bldgs.sqft)]<-0
city.combined.data$impervious.sqft[is.na(city.combined.data$impervious.sqft)]<-0
city.combined.data$open.space.sqft[is.na(city.combined.data$open.space.sqft)]<-0
city.combined.data$trees.sqft[is.na(city.combined.data$trees.sqft)]<-0
city.combined.data$bedrooms[is.na(city.combined.data$bedrooms)]<-0
city.combined.data$fullbaths[is.na(city.combined.data$fullbaths)]<-0
city.combined.data$halfbaths[is.na(city.combined.data$halfbaths)]<-0
city.combined.data<-city.combined.data%>%dplyr::mutate(bathrooms=fullbaths+0.5*halfbaths,trees.count=trees.sqft/3.14*(25/4)*(25/4))%>%dplyr::select(-fullbaths,-halfbaths)
city.combined.data<-city.combined.data%>%droplevels()
city.combined.data
# Function taken from ?pairs.
panel.cor <- function(x, y, digits = 2, prefix = "", cex.cor, ...)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
require(polycor)
r <- abs(cor(x, y))
txt <- format(c(r, 0.123456789), digits = digits)[1]
txt <- paste0(prefix, txt)
if(missing(cex.cor)) cex.cor <- 0.8/strwidth(txt)
text(0.5, 0.5, txt, cex = pmax(1, cex.cor * r))
}
corrplot.price<-hetcor(city.combined.new)
corrplot.price<-hetcor(city.combined.data)
corrplot.price<-corrplot::hetcor(city.combined.data)
corrplot.price<-polycor::hetcor(city.combined.data)
city.combined.data<-left_join(desc.res.new,price.res.new,by="parid")
city.combined.data<-left_join(city.combined.data,land.use.new,by="parid")
city.combined.data<-left_join(city.combined.data,sewersheds.new,by="parid")
city.combined.data$parid<-as.factor(city.combined.data$parid)
city.combined.data<-city.combined.data[!is.na(city.combined.data$price),]
#city.combined.data<-city.combined.data%>%dplyr::filter(price!=0)
city.combined.data$bldgs.sqft[is.na(city.combined.data$bldgs.sqft)]<-0
city.combined.data$impervious.sqft[is.na(city.combined.data$impervious.sqft)]<-0
city.combined.data$open.space.sqft[is.na(city.combined.data$open.space.sqft)]<-0
city.combined.data$trees.sqft[is.na(city.combined.data$trees.sqft)]<-0
city.combined.data$bedrooms[is.na(city.combined.data$bedrooms)]<-0
city.combined.data$fullbaths[is.na(city.combined.data$fullbaths)]<-0
city.combined.data$halfbaths[is.na(city.combined.data$halfbaths)]<-0
city.combined.data<-city.combined.data%>%dplyr::mutate(bathrooms=fullbaths+0.5*halfbaths,trees.count=trees.sqft/3.14*(25/4)*(25/4))%>%dplyr::select(-fullbaths,-halfbaths)
city.combined.data<-city.combined.data%>%droplevels()
city.combined.data
# Function taken from ?pairs.
panel.cor <- function(x, y, digits = 2, prefix = "", cex.cor, ...)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
require(polycor)
r <- abs(cor(x, y))
txt <- format(c(r, 0.123456789), digits = digits)[1]
txt <- paste0(prefix, txt)
if(missing(cex.cor)) cex.cor <- 0.8/strwidth(txt)
text(0.5, 0.5, txt, cex = pmax(1, cex.cor * r))
}
city.combined.new<-dplyr::select(city.combined.data,-parid,-census.block.group,-sewer.shed,-cso.per.inflow) # making a new data set comprising of variables that I think may have an impact on prices
pairs(city.combined.new, lower.panel = panel.cor)
corrplot.price<-polycor::hetcor(city.combined.data)
knitr::opts_chunk$set(echo = TRUE)
require(ggplot2)
require(tidyverse)
require(forcats)
require(polycor)
require(corrplot)
require(knitr)
require(tidyverse)
require(MASS)
require(ISLR)
require(dplyr)
require(anova)
combined.sewershed<-left_join(desc.res.new,sewersheds.new,by="parid")
combined.sewershed<-combined.sewershed%>%dplyr::select(sewer.shed,cso.per.inflow)
combined.sewershed<-combined.sewershed%>%
group_by(sewer.shed)%>%
summarize(avg.csoperinflow=mean(cso.per.inflow))
combined.sewershed
combined.sewershed<-combined.sewershed%>%
mutate(tree.outcome=avg.csoperinflow*0.02,rainforest.outcome=avg.csoperinflow*3.18)%>%
arrange(-tree.outcome)
top.sewershed<-head(combined.sewershed,5)
top.sewershed
table(top.sewershed)
kable(top.sewershed)
