require(tidyverse)
require(dplyr)
ren <- read.csv("https://s3.amazonaws.com/aws-website-programminginrforanalytics-tbal0/data/EIA_renewables_terajoules.csv", header = TRUE)
nuc <- read.csv("https://s3.amazonaws.com/aws-website-programminginrforanalytics-tbal0/data/EIA_nuclear_terajoules.csv", header = TRUE)
prod <- read.csv("https://s3.amazonaws.com/aws-website-programminginrforanalytics-tbal0/data/EIA_production_terajoules.csv", header = TRUE)
cons <- read.csv("https://s3.amazonaws.com/aws-website-programminginrforanalytics-tbal0/data/EIA_consumption_terajoules.csv", header = TRUE)
co2 <- read.csv("https://s3.amazonaws.com/aws-website-programminginrforanalytics-tbal0/data/EIA_CO2_million_metric_tonnes.csv", header = TRUE)
gdp <- read.csv("https://s3.amazonaws.com/aws-website-programminginrforanalytics-tbal0/data/WEO_gdp_billions_US_dollars.csv", header = TRUE)
ren.data<-ren%>%gather(X1980:X2015,key="year",value = "renewable_tj")
nuc.data<-nuc%>%gather(X1980:X2015,key="year",value = "nuclear_tj")
prod.data<-prod%>%gather(X1980:X2014,key="year",value = "production_tj")
cons.data<-cons%>%gather(X1980:X2014,key="year",value = "consumption_tj")
co2.data<-co2%>%gather(X1980:X2014,key="year",value = "co2_mmt")
gdp.data<-gdp%>%gather(X1980:X2014,key="year",value = "gdp_bnusd")
ren_nuc_data<-left_join(ren.data,nuc.data,by=c("country","year"))
combined_data<-left_join(ren_nuc_data,prod.data,by=c("country","year"))
combined_data<-left_join(combined_data,cons.data,by=c("country","year"))
combined_data<-left_join(combined_data,co2.data,by=c("country","year"))
combined_data<-left_join(combined_data,gdp.data,by=c("country","year"))
head(combined_data,10)
combined_data%>%sum(duplicated(country,year))
data_check<-sum(duplicated(combined_data$country,combined_data$year))
data_Check
data_check
data_check<-sum(duplicated(combined_data$country&&combined_data$year))
data_check<-sum(duplicated(combined_data$country))
data_check
data_check<-sum(duplicated(c(combined_data$country,combined_data$year))
data_check
data_check<-sum(duplicated(c(combined_data$country,combined_data$year))
data_check<-sum(duplicated(c(combined_data$country,combined_data$year)))
data_check<-sum(duplicated(combined_data[c('country','year'))
data_check<-sum(duplicated(combined_data[c('country','year']))
data_check<-sum(duplicated(combined_data[c("country","year"]))
data_check<-sum(duplicated(combined_data[c(country,year]))
data_check<-sum(duplicated(combined_data[c(country,year]
data_check<-sum(duplicated(combined_data[c(country,year)]))
data_check<-sum(duplicated(combined_data[c("country","year")]))
data_check
combined_gdp_data<-combined_data%>%group_by(country)%>%summarise(sum_gdp=sum(gdp_bnusd,na.rm=TRUE))%>%arrange(-sum_gdp)
combined_data$renewable_tj<-as.numeric(combined_data$renewable_tj)
combined_data$nuclear_tj<-as.numeric(combined_data$nuclear_tj)
combined_data$production_tj<-as.numeric(combined_data$production_tj)
combined_data$consumption_tj<-as.numeric(combined_data$consumption_tj)
combined_data$co2_mmt<-as.numeric(combined_data$co2_mmt)
combined_data$gdp_bnusd<-as.numeric(combined_data$gdp_bnusd)
combined_data<-mutate(combined_data,energy_deficit_tj=production_tj-consumption_tj)
ggplot(combined_data)+geom_point(mapping=aes(x=energy_deficit_tj,y=log(gdp_bnusd),colour=renewable_tj,size=co2_mmt))
combined_gdp_data<-combined_data%>%group_by(country)%>%summarise(sum_gdp=sum(gdp_bnusd,na.rm=TRUE))%>%arrange(-sum_gdp)
top_gdp<-head(combined_gdp_data,20)
top_country_data<-filter(combined_data,country%in%top_gdp$country)
top_country_data<-mutate(top_country_data,fossil_free_ratio=(renewable_tj+nuclear_tj)/consumption_tj)
ggplot(top_country_data)+geom_line(mapping = aes(x=log(gdp_bnusd),y=log(co2_mmt)))+facet_wrap(~country,nrow =5)+geom_point(mapping = aes(x=log(gdp_bnusd),y=log(co2_mmt),size=renewable_ratio))
combined_gdp_data<-combined_data%>%group_by(country)%>%summarise(sum_gdp=sum(gdp_bnusd,na.rm=TRUE))%>%arrange(-sum_gdp)
top_gdp<-head(combined_gdp_data,20)
top_country_data<-filter(combined_data,country%in%top_gdp$country)
top_country_data<-mutate(top_country_data,fossil_free_ratio=(renewable_tj+nuclear_tj)/consumption_tj)
ggplot(top_country_data)+geom_line(mapping = aes(x=log(gdp_bnusd),y=log(co2_mmt)))+facet_wrap(~country,nrow =5)+geom_point(mapping = aes(x=log(gdp_bnusd),y=log(co2_mmt),size=fossil_free_ratio))
ggplot(top_country_data)+geom_line(mapping = aes(x=log(gdp_bnusd),y=log(co2_mmt)))+facet_wrap(~country,nrow =4)+geom_point(mapping = aes(x=log(gdp_bnusd),y=log(co2_mmt),size=fossil_free_ratio))
ggplot(top_country_data)+geom_line(mapping = aes(x=log(gdp_bnusd),y=log(co2_mmt)))+facet_wrap(~country,nrow =6)+geom_point(mapping = aes(x=log(gdp_bnusd),y=log(co2_mmt),size=fossil_free_ratio))
ggplot(top_country_data)+geom_line(mapping = aes(x=log(gdp_bnusd),y=log(co2_mmt)))+facet_wrap(~country,nrow =6)+geom_point(mapping = aes(x=log(gdp_bnusd),y=log(co2_mmt),size=fossil_free_ratio))
ggplot(top_country_data)+geom_line(mapping = aes(x=log(gdp_bnusd),y=log(co2_mmt)))+facet_wrap(~country,nrow =3)+geom_point(mapping = aes(x=log(gdp_bnusd),y=log(co2_mmt),size=fossil_free_ratio))
ggplot(top_country_data)+geom_line(mapping = aes(x=log(gdp_bnusd),y=log(co2_mmt)))+facet_wrap(~country,nrow =4)+geom_point(mapping = aes(x=log(gdp_bnusd),y=log(co2_mmt),size=fossil_free_ratio))
mod_combined data<-mutate(combined_data,year=str_sub(year,2,4)))
mod_combined data<-combined_data%>%mutate(year=str_sub(year,2,4)))
mod_combined_data<-combined_data%>%mutate(year=str_sub(year,2,4)))
mod_combined_data<-combined_data%>%mutate(year=str_sub(year,2,4))
mod_combined_data
mod_combined_data<-combined_data%>%mutate(year=str_sub(year,2,5))
mod_combined_data
head(mod_combined_data)
ggplot(top_country_data)+geom_line(mapping = aes(x=log(gdp_bnusd),y=log(co2_mmt)))+facet_wrap(~country,nrow =4,as.table = FALSE)+geom_point(mapping = aes(x=log(gdp_bnusd),y=log(co2_mmt),size=fossil_free_ratio))
ggplot(top_country_data)+geom_line(mapping = aes(x=log(gdp_bnusd),y=log(co2_mmt)))+facet_wrap(~country,nrow =4)+geom_point(mapping = aes(x=log(gdp_bnusd),y=log(co2_mmt),size=fossil_free_ratio))
head(as.tibble(combined_data),10)
install.packages("stringr")
install.packages("stringr")
